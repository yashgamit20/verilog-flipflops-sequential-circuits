`timescale 1ns / 1ps


module JK_flip_flop(
    input clk,rst,
    input J,K,
    output reg Q
    );
    
    always @(posedge clk)begin
        if(!rst)
            Q<=1'b0;
        else begin
            case({J,K})
                2'b00:Q<=Q;
                2'b01:Q<=1'b0;
                2'b10:Q<=1'b1;
                2'b11:Q<=~Q;
            endcase
        end 
    end 
                
            
endmodule

module tb_JK_flip_flop;

    reg clk,rst,J,K;
    wire Q;
    
    initial begin   
        clk=0;
        forever #5 clk=~clk;
    end 
    
    JK_flip_flop dut(.clk(clk),.rst(rst),.J(J),.K(K),.Q(Q));
    
    initial begin
        $display("time\t J\t K\t  Q\t Qbar\t");
        $monitor ("%0t\t %d\t %d\t %d\t  ",$time ,J,K,Q);
        
        clk=0;rst=0;#10;
        clk=1;rst=1;#10;
        J=0;K=0;#10;
        J=0;K=1;#10;
        J=1;K=1;#10;
        J=1;K=0;#10;
        J=0;K=0;#10;
        J=0;K=1;#10;
        J=0;K=0;#10;
        J=0;K=1;#10;
        J=1;K=1;#10;
        J=1;K=0;#10;
        J=0;K=0;#10;
        J=0;K=1;#10;
        
        #100;
                    
        $finish;
     end 
endmodule 
